tosca_definitions_version: tosca_simple_yaml_1_2

metadata:
  id: "{{ id }}"
  name: "{{ name }}"
  author: "{{ author }}"
  date: "{{ date }}"
  version: "{{ version }}"
  classificationSchema: "{{ classificationSchema }}"
  type:
  {%- for _type in type %}
  - "{{ _type }}"
  {%- endfor %}

description: "{{ description }}"

imports:
- micado_types.yaml

{%- for msid in deployment_mapping %}
- microservice.{{ msid }}.yaml
{%- endfor %}
{%- for hostid in deployment_mapping.values() | unique %}
- deployment.{{ hostid }}.yaml
{%- endfor %}

topology_template:

  {%- if insertConditionEvaluator == true %}
  inputs:
    RULES_OF_CONDITION_EVALUATOR:
      type: map
      required: true

  {%- endif %}
  node_templates:
  {%- for msid in list_of_microservices %}
    microservice.{{msid}}:
      type: micado.microservice.{{ msid }}
      requirements:
      {%- for _msid in deployment_mapping.items() %}
      {%- set _msid, hostid = _msid %}
      {%- if _msid == msid %}
      - host: deployment.{{ hostid }}
      {%- endif %}
      {%- endfor %}
  {%- endfor %}

    {%- if insertConditionEvaluator == true %} 
    microservice.condition_evaluator:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: ignaciolopezr/digitbrain-condition-evaluator
        ports:
        - port: 80
          targetPort: "5000"
        env:
        - name: CONDITIONS
          value: { get_input: RULES_OF_CONDITION_EVALUATOR }
        - name: DMAINSTANCEID
          value: {{ id }}
        - name: MH_ENDPOINT
          value: "{{ endpointMessageHandler }}"
      interfaces:
        Kubernetes:
          create:
            inputs:
              spec:
                template:
                  spec:
                    tolerations:
                    - key: node-role.kubernetes.io/master
                      effect: NoSchedule
                    nodeSelector:
                      node-role.kubernetes.io/master: ''
   
    {%- endif %} 
  {%- for hostid in deployment_mapping.values() | unique %}
    deployment.{{ hostid }}:
      type: micado.deployment.{{ hostid }}
  {%- endfor %}

  policies:
  - monitoring:
      type: tosca.policies.Monitoring.MiCADO
      properties:
        enable_container_metrics: false
        enable_node_metrics: false


